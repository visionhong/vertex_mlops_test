# Copyright 2023 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#            http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#############################################################################
# CI/CD steps for Cloud Build to test and deploy a TFX pipeline to Vertex AI.
#############################################################################

# Access the id_github file from Secret Manager, and setup SSH
steps:
- name: 'gcr.io/cloud-builders/git'
  secretEnv: ['SSH_KEY']
  entrypoint: 'bash'
  args:
  - -c
  - |
    echo "$$SSH_KEY" >> /root/.ssh/id_rsa
    chmod 400 /root/.ssh/id_rsa
    ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: 'Prepare git keys'

# Clone the repository.
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', '--single-branch', '--branch',
         '$_BRANCH', '$_REPO_URL',
         '--depth', '1',
         '--verbose']
  volumes:
  - name: 'ssh'
    path: /root/.ssh
  id: 'Clone Repository'
  waitFor: ['Prepare git keys']
  

# Run datasource_utils unit tests.
- name: '$_CICD_IMAGE_URI'
  entrypoint: 'echo'
  args: ['Running unit tests - dummy build']
  id: 'Unit Tests'
  waitFor: ['Clone Repository']


# Compile the pipeline.
- name: '$_CICD_IMAGE_URI'
  entrypoint: 'python'
  args: ['pipeline.py', '--compile-only']
  dir: '$_WORKDIR/src/bqml_pipeline/src/'
  env: 
  - 'PROJECT_ID=$_PROJECT'  
  - 'REGION=$_REGION'
  - 'MODEL_DISPLAY_NAME=$_MODEL_DISPLAY_NAME'
  - 'SERVICE_ACCOUNT=$_SERVICE_ACCOUNT'
  - 'NETWORK=$_NETWORK'
  - 'BQ_DATASET_NAME=$_BQ_DATASET_NAME'
  - 'ML_TABLE=$_ML_TABLE'
  - 'MODEL_DISPLAY_NAME=$_MODEL_DISPLAY_NAME'
  - 'PIPELINE_NAME=$_PIPELINE_NAME'
  - 'PIPELINES_STORE=$_PIPELINES_STORE'
  - 'CICD_IMAGE_URI=$_CICD_IMAGE_URI'
  - 'CICD_IMAGE_MODEL_CARD=$_CICD_IMAGE_MODEL_CARD'
  - 'DATAFLOW_SA=$_SERVICE_ACCOUNT'
  - 'DATAFLOW_NETWORK=$_DATAFLOW_NETWORK'  
  id: 'Compile Pipeline'
  waitFor: ['Unit Tests']
  
# Upload compiled pipeline to GCS.
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', '$_PIPELINE_NAME.json', '$_PIPELINES_STORE']
  dir: '$_WORKDIR/src/bqml_pipeline/src/'
  id:  'Upload Pipeline to GCS'
  waitFor: ['Compile Pipeline']
  

serviceAccount: 'projects/$_PROJECT/serviceAccounts/$_SERVICE_ACCOUNT'
logsBucket: '$_GCS_BUCKET'
timeout: 7200s
substitutions:
  _REPO_URL: git@github.com:${github_org}/${github_repo}
  _CICD_IMAGE_URI: '${docker_repo}/cicd-bqml:latest'
  _CICD_IMAGE_MODEL_CARD: '${docker_repo}/model-card:latest'  
  _BRANCH: ${github_branch}
  _REGION: ${region}
  _PROJECT: ${project_id}
  _GCS_BUCKET: ${project_id}_cloudbuild/logs
  _BQ_DATASET_NAME: creditcards
  _ML_TABLE: creditcards_ml
  _PIPELINE_NAME: creditcards-classifier-bqml-train
  _PIPELINES_STORE: gs://${bucket_name}/creditcards/compiled_pipelines/
  _MODEL_DISPLAY_NAME: creditcards-bqml
  _NETWORK: ${subnetwork}
  _DATAFLOW_NETWORK: ${dataflow_network}
  _SERVICE_ACCOUNT: ${sa_mlops}
  _WORKDIR: ${github_repo}
options:
  machineType: 'E2_HIGHCPU_8'

availableSecrets:
  secretManager:
  - versionName: projects/${project_id}/secrets/github-key/versions/latest
    env: 'SSH_KEY'
